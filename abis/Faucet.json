{
  "contractName": "Faucet",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_daiToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_daiToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/PUNNAWICHSILPKITCHAR/Desktop/dev-mimic/mimic-farm-v2/contracts/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/PUNNAWICHSILPKITCHAR/Desktop/dev-mimic/mimic-farm-v2/contracts/Daitoken.sol\":{\"keccak256\":\"0x456b22d758c74193dbc85a455b6578df0ebe65c8f2d07e5656756a2ced1589c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8260da09122400e2a678dc6005cda299bdb3b39b8ff85ac49a95a4b10cb64997\",\"dweb:/ipfs/QmZVLd3Erey9svvdbALCLgGhcbU6L7YW65kVu4UGg1mmqy\"]},\"/C/Users/PUNNAWICHSILPKITCHAR/Desktop/dev-mimic/mimic-farm-v2/contracts/Faucet.sol\":{\"keccak256\":\"0x3710bd80a6a4730b5c584368aedfdab133a5b8a55578afec023bc922aec385f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb14defbc58face19909d1ee50266bb2064b73b302d287a97b14f1ce0ffaee86\",\"dweb:/ipfs/QmQu5fy94BiSSE8h4Wmvq5s6ZmCUvdrCb7szJfWwPjMfFL\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516103cf3803806103cf8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b6102c18061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634e71d92d1461003b578063be22f54614610045575b600080fd5b610043610063565b005b61004d610123565b60405161005a91906101db565b60405180910390f35b600033905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8269021e19e0c9bab24000006040518363ffffffff1660e01b81526004016100cd9291906101b2565b602060405180830381600087803b1580156100e757600080fd5b505af11580156100fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011f919061015c565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008151905061015681610274565b92915050565b60006020828403121561016e57600080fd5b600061017c84828501610147565b91505092915050565b61018e816101f6565b82525050565b61019d8161023e565b82525050565b6101ac81610262565b82525050565b60006040820190506101c76000830185610185565b6101d460208301846101a3565b9392505050565b60006020820190506101f06000830184610194565b92915050565b600061020182610214565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061024982610250565b9050919050565b600061025b82610214565b9050919050565b600061026d82610234565b9050919050565b61027d81610208565b811461028857600080fd5b5056fea2646970667358221220ee9a0009b56b6565cab5684cfeaafe7767e260d08fd3decb027266937669fe0364736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80634e71d92d1461003b578063be22f54614610045575b600080fd5b610043610063565b005b61004d610123565b60405161005a91906101db565b60405180910390f35b600033905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8269021e19e0c9bab24000006040518363ffffffff1660e01b81526004016100cd9291906101b2565b602060405180830381600087803b1580156100e757600080fd5b505af11580156100fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011f919061015c565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008151905061015681610274565b92915050565b60006020828403121561016e57600080fd5b600061017c84828501610147565b91505092915050565b61018e816101f6565b82525050565b61019d8161023e565b82525050565b6101ac81610262565b82525050565b60006040820190506101c76000830185610185565b6101d460208301846101a3565b9392505050565b60006020820190506101f06000830184610194565b92915050565b600061020182610214565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061024982610250565b9050919050565b600061025b82610214565b9050919050565b600061026d82610234565b9050919050565b61027d81610208565b811461028857600080fd5b5056fea2646970667358221220ee9a0009b56b6565cab5684cfeaafe7767e260d08fd3decb027266937669fe0364736f6c63430008040033",
  "immutableReferences": {},
  "sourceMap": "147:264:4:-:0;;;199:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;258:9;241:8;;:27;;;;;;;;;;;;;;;;;;199:77;147:264;;7:143:11;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;483:7;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;585:7;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;147:264:4:-;;;;;;;",
  "deployedSourceMap": "147:264:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;284:124;;;:::i;:::-;;169:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;284:124;319:17;339:10;319:30;;360:8;;;;;;;;;;:17;;;378:9;389:10;360:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;284:124;:::o;169:21::-;;;;;;;;;;;;:::o;7:137:11:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:278::-;217:6;266:2;254:9;245:7;241:23;237:32;234:2;;;282:1;279;272:12;234:2;325:1;350:61;403:7;394:6;383:9;379:22;350:61;:::i;:::-;340:71;;296:125;224:204;;;;:::o;434:118::-;521:24;539:5;521:24;:::i;:::-;516:3;509:37;499:53;;:::o;558:159::-;659:51;704:5;659:51;:::i;:::-;654:3;647:64;637:80;;:::o;723:191::-;840:67;901:5;840:67;:::i;:::-;835:3;828:80;818:96;;:::o;920:392::-;1071:4;1109:2;1098:9;1094:18;1086:26;;1122:71;1190:1;1179:9;1175:17;1166:6;1122:71;:::i;:::-;1203:102;1301:2;1290:9;1286:18;1277:6;1203:102;:::i;:::-;1076:236;;;;;:::o;1318:250::-;1425:4;1463:2;1452:9;1448:18;1440:26;;1476:85;1558:1;1547:9;1543:17;1534:6;1476:85;:::i;:::-;1430:138;;;;:::o;1574:96::-;1611:7;1640:24;1658:5;1640:24;:::i;:::-;1629:35;;1619:51;;;:::o;1676:90::-;1710:7;1753:5;1746:13;1739:21;1728:32;;1718:48;;;:::o;1772:126::-;1809:7;1849:42;1842:5;1838:54;1827:65;;1817:81;;;:::o;1904:77::-;1941:7;1970:5;1959:16;;1949:32;;;:::o;1987:154::-;2051:9;2084:51;2129:5;2084:51;:::i;:::-;2071:64;;2061:80;;;:::o;2147:127::-;2211:9;2244:24;2262:5;2244:24;:::i;:::-;2231:37;;2221:53;;;:::o;2280:143::-;2360:9;2393:24;2411:5;2393:24;:::i;:::-;2380:37;;2370:53;;;:::o;2429:116::-;2499:21;2514:5;2499:21;:::i;:::-;2492:5;2489:32;2479:2;;2535:1;2532;2525:12;2479:2;2469:76;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./Daitoken.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract Faucet{\r\n    ERC20 public daiToken;\r\n\r\n    constructor(address _daiToken) {\r\n        daiToken = ERC20(_daiToken);\r\n    }\r\n\r\n    function claim () public{\r\n        address recipient = msg.sender;\r\n        daiToken.transfer(recipient, 10000*1e18);\r\n    }\r\n}",
  "sourcePath": "C:/Users/PUNNAWICHSILPKITCHAR/Desktop/dev-mimic/mimic-farm-v2/contracts/Faucet.sol",
  "ast": {
    "absolutePath": "/C/Users/PUNNAWICHSILPKITCHAR/Desktop/dev-mimic/mimic-farm-v2/contracts/Faucet.sol",
    "exportedSymbols": {
      "Context": [
        1176
      ],
      "DaiToken": [
        49
      ],
      "ERC20": [
        1051
      ],
      "Faucet": [
        137
      ],
      "IERC20": [
        1129
      ],
      "IERC20Metadata": [
        1154
      ]
    },
    "id": 138,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 101,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:4"
      },
      {
        "absolutePath": "/C/Users/PUNNAWICHSILPKITCHAR/Desktop/dev-mimic/mimic-farm-v2/contracts/Daitoken.sol",
        "file": "./Daitoken.sol",
        "id": 102,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 50,
        "src": "62:24:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 103,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 1052,
        "src": "88:55:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 137,
        "linearizedBaseContracts": [
          137
        ],
        "name": "Faucet",
        "nameLocation": "156:6:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "be22f546",
            "id": 106,
            "mutability": "mutable",
            "name": "daiToken",
            "nameLocation": "182:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 137,
            "src": "169:21:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$1051",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 105,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 104,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1051,
                "src": "169:5:4"
              },
              "referencedDeclaration": 1051,
              "src": "169:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1051",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 117,
              "nodeType": "Block",
              "src": "230:46:4",
              "statements": [
                {
                  "expression": {
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 111,
                      "name": "daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "241:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1051",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 113,
                          "name": "_daiToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 108,
                          "src": "258:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 112,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1051,
                        "src": "252:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$1051_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "252:16:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1051",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "241:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1051",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "241:27:4"
                }
              ]
            },
            "id": 118,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "_daiToken",
                  "nameLocation": "219:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "211:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "211:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "210:19:4"
            },
            "returnParameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "230:0:4"
            },
            "scope": 137,
            "src": "199:77:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "308:100:4",
              "statements": [
                {
                  "assignments": [
                    122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "327:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 135,
                      "src": "319:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 121,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "319:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 125,
                  "initialValue": {
                    "expression": {
                      "id": 123,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "339:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "339:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "319:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 129,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "378:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130303030",
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "389:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "395:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "389:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 126,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "360:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1051",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 587,
                      "src": "360:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "360:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "360:40:4"
                }
              ]
            },
            "functionSelector": "4e71d92d",
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "293:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "299:2:4"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "308:0:4"
            },
            "scope": 137,
            "src": "284:124:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 138,
        "src": "147:264:4",
        "usedErrors": []
      }
    ],
    "src": "35:376:4"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/PUNNAWICHSILPKITCHAR/Desktop/dev-mimic/mimic-farm-v2/contracts/Faucet.sol",
    "exportedSymbols": {
      "Context": [
        1176
      ],
      "DaiToken": [
        49
      ],
      "ERC20": [
        1051
      ],
      "Faucet": [
        137
      ],
      "IERC20": [
        1129
      ],
      "IERC20Metadata": [
        1154
      ]
    },
    "id": 138,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 101,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:4"
      },
      {
        "absolutePath": "/C/Users/PUNNAWICHSILPKITCHAR/Desktop/dev-mimic/mimic-farm-v2/contracts/Daitoken.sol",
        "file": "./Daitoken.sol",
        "id": 102,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 50,
        "src": "62:24:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 103,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 1052,
        "src": "88:55:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 137,
        "linearizedBaseContracts": [
          137
        ],
        "name": "Faucet",
        "nameLocation": "156:6:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "be22f546",
            "id": 106,
            "mutability": "mutable",
            "name": "daiToken",
            "nameLocation": "182:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 137,
            "src": "169:21:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$1051",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 105,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 104,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1051,
                "src": "169:5:4"
              },
              "referencedDeclaration": 1051,
              "src": "169:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1051",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 117,
              "nodeType": "Block",
              "src": "230:46:4",
              "statements": [
                {
                  "expression": {
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 111,
                      "name": "daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "241:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1051",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 113,
                          "name": "_daiToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 108,
                          "src": "258:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 112,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1051,
                        "src": "252:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$1051_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "252:16:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1051",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "241:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1051",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "241:27:4"
                }
              ]
            },
            "id": 118,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "_daiToken",
                  "nameLocation": "219:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "211:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "211:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "210:19:4"
            },
            "returnParameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "230:0:4"
            },
            "scope": 137,
            "src": "199:77:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "308:100:4",
              "statements": [
                {
                  "assignments": [
                    122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "327:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 135,
                      "src": "319:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 121,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "319:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 125,
                  "initialValue": {
                    "expression": {
                      "id": 123,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "339:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "339:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "319:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 129,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "378:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130303030",
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "389:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "395:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "389:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 126,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "360:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1051",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 587,
                      "src": "360:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "360:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "360:40:4"
                }
              ]
            },
            "functionSelector": "4e71d92d",
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "293:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "299:2:4"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "308:0:4"
            },
            "scope": 137,
            "src": "284:124:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 138,
        "src": "147:264:4",
        "usedErrors": []
      }
    ],
    "src": "35:376:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xB8aC3C4773aca4E2d313b2d655ccA34d6F57664B",
      "transactionHash": "0xd064c2d539abeb9918ff92a57e9193cae2b9b2ad907bbe2ec7a6ee04f18fa1d3"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2022-03-14T15:14:38.145Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}