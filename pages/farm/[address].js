import { useEffect, useState, useCallback } from "react";

import styles from "styles/Home.module.css";
import Head from "next/head";
import OpenPool from "constants/OpenPool.json"
import { PoolContextProvider } from "contexts/PoolContext";
import { Panel } from "components/StableCoinPool/Panel";
import { useERC20Utils } from "hooks/useContracts";
import { useRouter } from "next/router";

import {
  Text,
  Grid,
  Container,
  Box,
  GridItem,
  Image,
  Spinner,
  Center,
  IconButton,
  ButtonGroup,
  Divider,
} from "@chakra-ui/react";

import { FaCalculator } from "react-icons/fa";
import TVD from "components/StableCoinPool/TVD";

const StableCoinPool = () => {
  const router = useRouter();
  const { address } = router.query;
  const ERC20Utils = useERC20Utils();
  const [symbol, setSymbol] = useState();
  const info = OpenPool.find((pool) => pool.address == address)

  const getImage = (address) => {
    return `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${address}/logo.png`;
  };

  const getSymbol = useCallback(async () => {
    try {
      const _symbol = await ERC20Utils.methods.symbol(address).call();
      setSymbol(_symbol);
    } catch {}
  }, [ERC20Utils.methods, address]);

  useEffect(() => {
    getSymbol();
  }, [getSymbol]);

  return (
    <div className={styles.container}>
      <PoolContextProvider address={address}>
        <Head>
          <title>Mimic Finance | Multi Farming Yields Aggerator System</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Container maxW="container.xl" mt={10}>
          <>
            <Grid templateColumns="repeat(10, 1fr)" gap={6}>
              <GridItem colSpan={1}>
                <Box>
                  <Image
                    src={getImage(address)}
                    alt={address}
                    width={75}
                    fallbackSrc="/assets/images/logo-box.png"
                  />
                </Box>
              </GridItem>
              <GridItem colSpan={7}>
                <Text fontSize="4xl">
                  <b>{symbol} Pool</b>
                </Text>
              </GridItem>
              <GridItem colSpan={2} style={{ textAlign: "right" }}>
                <ButtonGroup variant="ghost" color="gray.600">
                  <IconButton
                    aria-label="Calculator"
                    icon={<FaCalculator fontSize="15px" />}
                  />
                </ButtonGroup>
                &nbsp; APR
                <Text fontSize="4xl">
                  {info.apr} %
                </Text>
              </GridItem>
            </Grid>

            <Grid templateColumns="repeat(10, 1fr)" gap={10} mt={7}>
              <GridItem colSpan={6}>
                <Text fontSize="xl">
                {info.info}
                </Text>

                <Box mt={10}>
                 
                  <TVD tokenAddress={address} symbol={symbol}></TVD>
                </Box>
              </GridItem>
              <GridItem colSpan={4}>
                <Panel symbol={symbol} tokenAddress={address} />
              </GridItem>
            </Grid>
          </>
        </Container>
      </PoolContextProvider>
    </div>
  );
};

export default StableCoinPool;
